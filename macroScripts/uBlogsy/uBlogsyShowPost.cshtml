@using uBlogsy.Common.Extensions;
@using uBlogsy.Common.Helpers;
@using umbraco.MacroEngines;
@using System;
@using uBlogsy.BusinessLogic;

@{
    DynamicNode d;
    
    if (PageData.Count > 0){
        d = new DynamicNode(PageData[0]);
    }
    else{
        d = new DynamicNode(Model.Id);
    }
    
    <div class="row-fluid">
    <div class="uBlogsy_posts uBlogsy_bottom_borders span12 well well-small">
        <h2>
            <a href="@d.Url" title="@d.GetProperty("uBlogsyContentTitle")"><span>@d.GetProperty("uBlogsyContentTitle")</span></a></h2>
        
        <ul class="breadcrumb">
            <li><i class="icon-calendar"></i><span class="uBlogsy_post_date"> @d.GetProperty("uBlogsyPostDate").Value.FormatDateTime("dddd MMMM d, yyyy") </span><span class="divider">--</span></li>
            <li>@RenderPage("/macroScripts/uBlogsy/uBlogsyListAuthors.cshtml", d.Id)</li>
        </ul>
       
        <!-- <h3 class="uBlogsy_post_date">@d.GetProperty("uBlogsyPostDate").Value.FormatDateTime("dddd MMMM d, yyyy") | @RenderPage("/macroScripts/uBlogsy/uBlogsyListAuthors.cshtml", d.Id)</h3> -->
        
        <div class="uBlogsy_post_body">
           @RenderImage(d)
           @RenderPostBody(d) 
        </div>
        
        
        
        <div class="row-fluid">
        <div class="uBlogsy_comment_count span4">
            @{
                var comments = CommentService.Instance.GetComments(d.Id, false).ToList();

                if (comments.Count == 0)
                {
                    <ul class="nav nav-pills postinfo">
                     <li><a href="@d.Url" title="@d.GetProperty("uBlogsyContentTitle")"><i class="icon-comment"></i> 0 Comments</a></li>
                     </ul>
                }
                else
                {
                    string url = CommentService.Instance.GetCommentUrl(comments.First(), true);
                    <ul class="nav nav-pills postinfo">
                     <li><a href="@url" title="Comments"><i class="icon-comment"></i> @comments.Count @Dictionary["uBlogsyDicComments"]</a></li>
                     </ul>
                }
            }
        </div>

        @*list tags*@
        <div class="uBlogsy_tag_lists span4"> @RenderPage("/macroScripts/uBlogsy/uBlogsyListTags.cshtml", @d.Id) </div>
        
        @*list categories*@
        <div class="uBlogsy_category_lists span4"> @RenderPage("/macroScripts/uBlogsy/uBlogsyListCategories.cshtml", @d.Id) 
        </div>
        </div>
        @*Social media links*@
        @RenderSocialMedia()
        
        @*next and previous links*@
        @if (Model.NodeTypeAlias == "uBlogsyPost")
        {
            DynamicNode prev = PostService.Instance.GetNextPost(d);
            DynamicNode next = PostService.Instance.GetPreviousPost(d);
            <div class="uBlogsy_next_prev">
                @if (prev != null)
                {
                    <a href="@prev.Url" class="uBlogsy_prev" title="Older Posts"> @Dictionary["uBlogsyDicPaginationOlder"]</a>
                }
            
                @if (next != null)
                {
                    <a href="@next.Url" class="uBlogsy_next" title="Newer Posts">@Dictionary["uBlogsyDicPaginationNewer"]</a>
                }
            </div>
        }
        
    </div>
    
    </div>
}





@helper RenderSocialMedia(){
    string useSummary = DataService.Instance.GetValueFromLanding(Model.Id, "uBlogsyGeneralShowSocialMedia");
    if (useSummary == "1" && Model.NodeTypeAlias != "uBlogsyLanding")
    {
       @* <div class="addthis_toolbox addthis_default_style">
            <a class="addthis_button_preferred_1"></a>
            <a class="addthis_button_preferred_2"></a>
            <a class="addthis_button_preferred_3"></a>
            <a class="addthis_button_preferred_4"></a>
            <a class="addthis_button_compact"></a>
        </div>*@
    
        <!-- AddThis Button BEGIN -->
        <div class="addthis_toolbox addthis_default_style ">
        <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
        <a class="addthis_button_tweet"></a>
        <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
        </div>
        <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4f20a32b369fc730"></script>
        <!-- AddThis Button END -->
     }
}




@helper RenderPostBody(DynamicNode d)
    {
        string useSummary = DataService.Instance.GetValueFromLanding(Model.Id, "uBlogsyGeneralUseSummary");
        if (useSummary == "1"
            && Model.NodeTypeAlias == "uBlogsyLanding"
            && d.GetProperty("uBlogsyContentSummary").Value.Trim() != string.Empty
            )
        {
        @Html.Raw(d.GetProperty("uBlogsyContentSummary").Value)
        }
        else
        {
        @Html.Raw(umbraco.library.RenderMacroContent(d.GetProperty("uBlogsyContentBody").Value, d.Id))
        } 
}

@helper RenderImage(DynamicNode d)
    {
        <!-- when no image, just return -->
        if (String.IsNullOrEmpty(d.GetPropertyValue("uBlogsyImage"))) { return; }

        <!-- get media item -->
        var media = new DynamicMedia(d.GetPropertyValue("uBlogsyImage"));

        <!-- get imageGen imageurl and css class -->
        string imageUrl, cssClass;

        if(Model.NodeTypeAlias == "uBlogsyPost")
        {
            imageUrl = string.Format("/ImageGen.ashx?image={0}&width=800", media.Url);
            cssClass = "uBlogsy_image_post";
        }
        else
        {
            imageUrl = String.Format("/ImageGen.ashx?image={0}&width=400", media.Url);
            cssClass = "uBlogsy_image_list";
        }

        <!-- render image -->
        <img src="@imageUrl" class="@cssClass" />

    }
